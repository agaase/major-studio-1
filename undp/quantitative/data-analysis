```python
import pandas as pd
import json
from pandas.io.json import json_normalize
import urllib.request as rq
import json
import os
import matplotlib.pyplot as plt
pd.set_option("display.max_columns",100)
```


```python
def fetch_data(index,type):
    response = rq.urlopen(os.environ["ES_URL"]+ index+'/'+type+'/_search?size=1000000')
    data = json.load(response)   
    data = data["hits"]["hits"]
    df = json_normalize(data)
    return df
```

## Individual conflict events


```python
df = fetch_data("ucdp","event")
```


```python
print(df.shape)
print(df.columns)
```

    (32834, 24)
    Index(['_id', '_index', '_score', '_source.best_est', '_source.ccd',
           '_source.clarity', '_source.country', '_source.d_id', '_source.d_name',
           '_source.date_end', '_source.date_start', '_source.high_est',
           '_source.is_active_conflict', '_source.latitude', '_source.longitude',
           '_source.low_est', '_source.side_a', '_source.side_a_id',
           '_source.side_b', '_source.side_b_id', '_source.source_article',
           '_source.type_of_conflict', '_source.year', '_type'],
          dtype='object')


### Looking at individual rows


```python
df[5:10]
```




<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>_id</th>
      <th>_index</th>
      <th>_score</th>
      <th>_source.best_est</th>
      <th>_source.ccd</th>
      <th>_source.clarity</th>
      <th>_source.country</th>
      <th>_source.d_id</th>
      <th>_source.d_name</th>
      <th>_source.date_end</th>
      <th>_source.date_start</th>
      <th>_source.high_est</th>
      <th>_source.is_active_conflict</th>
      <th>_source.latitude</th>
      <th>_source.longitude</th>
      <th>_source.low_est</th>
      <th>_source.side_a</th>
      <th>_source.side_a_id</th>
      <th>_source.side_b</th>
      <th>_source.side_b_id</th>
      <th>_source.source_article</th>
      <th>_source.type_of_conflict</th>
      <th>_source.year</th>
      <th>_type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>5</th>
      <td>AVr7VtB7u8C0brA7OyaB</td>
      <td>ucdp</td>
      <td>1.0</td>
      <td>1</td>
      <td>SOM</td>
      <td>1</td>
      <td>Somalia</td>
      <td>940</td>
      <td>Government of Somalia - Civilians</td>
      <td>2012-11-30</td>
      <td>2012-11-28</td>
      <td>1</td>
      <td>1</td>
      <td>-0.358173</td>
      <td>42.545365</td>
      <td>1</td>
      <td>Government of Somalia</td>
      <td>95</td>
      <td>Civilians</td>
      <td>1</td>
      <td>BBC Monitoring Africa 1 December 2012 "Program...</td>
      <td>3</td>
      <td>2012</td>
      <td>event</td>
    </tr>
    <tr>
      <th>6</th>
      <td>AVr7VtB7u8C0brA7OyaG</td>
      <td>ucdp</td>
      <td>1.0</td>
      <td>5</td>
      <td>SOM</td>
      <td>1</td>
      <td>Somalia</td>
      <td>750</td>
      <td>Government of Somalia - Al-Shabaab</td>
      <td>2012-02-01</td>
      <td>2012-01-29</td>
      <td>6</td>
      <td>1</td>
      <td>4.735833</td>
      <td>45.203611</td>
      <td>5</td>
      <td>Government of Somalia</td>
      <td>95</td>
      <td>Al-Shabaab</td>
      <td>717</td>
      <td>BBC Monitoring Africa 1 Feb 2012 "Ethiopian tr...</td>
      <td>1</td>
      <td>2012</td>
      <td>event</td>
    </tr>
    <tr>
      <th>7</th>
      <td>AVr7VtB7u8C0brA7OyaL</td>
      <td>ucdp</td>
      <td>1.0</td>
      <td>12</td>
      <td>SOM</td>
      <td>1</td>
      <td>Somalia</td>
      <td>5571</td>
      <td>Al-Shabaab - SVA</td>
      <td>2011-04-30</td>
      <td>2011-04-30</td>
      <td>12</td>
      <td>1</td>
      <td>7.000000</td>
      <td>48.000000</td>
      <td>12</td>
      <td>Al-Shabaab</td>
      <td>717</td>
      <td>SVA</td>
      <td>1147</td>
      <td>BBC Monitoring Africa 30 April 2011 "Fighting ...</td>
      <td>2</td>
      <td>2011</td>
      <td>event</td>
    </tr>
    <tr>
      <th>8</th>
      <td>AVr7VtB7u8C0brA7OyaQ</td>
      <td>ucdp</td>
      <td>1.0</td>
      <td>5</td>
      <td>SOM</td>
      <td>1</td>
      <td>Somalia</td>
      <td>5571</td>
      <td>Al-Shabaab - SVA</td>
      <td>2011-01-26</td>
      <td>2011-01-26</td>
      <td>5</td>
      <td>1</td>
      <td>4.735833</td>
      <td>45.203611</td>
      <td>5</td>
      <td>Al-Shabaab</td>
      <td>717</td>
      <td>SVA</td>
      <td>1147</td>
      <td>BBC Monitoring Africa 27 Jan 2011 "Regional fo...</td>
      <td>2</td>
      <td>2011</td>
      <td>event</td>
    </tr>
    <tr>
      <th>9</th>
      <td>AVr7VtB7u8C0brA7OyaV</td>
      <td>ucdp</td>
      <td>1.0</td>
      <td>5</td>
      <td>SOM</td>
      <td>1</td>
      <td>Somalia</td>
      <td>5571</td>
      <td>Al-Shabaab - SVA</td>
      <td>2011-11-04</td>
      <td>2011-11-04</td>
      <td>5</td>
      <td>1</td>
      <td>5.038760</td>
      <td>45.289140</td>
      <td>3</td>
      <td>Al-Shabaab</td>
      <td>717</td>
      <td>SVA</td>
      <td>1147</td>
      <td>BBC Monitoring Africa 4 November 2011 "Three k...</td>
      <td>2</td>
      <td>2011</td>
      <td>event</td>
    </tr>
  </tbody>
</table>
</div>



### Finding variation in total violence for different countries


```python
violence_countries = df.groupby(["_source.ccd"]).sum()["_source.high_est"]
violence_countries.values
```




    array([ 74559,  33071,      1,   9340,   3971,   3017, 177442,  28760,
              168,   1481,  28316,  19549, 201752,  10559,   1780,    934,
             6378,  27854,   6831,     69,    445,    263,   5318,   9966,
              800,    428,   2279,  61918, 834147, 181821,   2460,  32628,
            69618,  11455,      2,  23213,    596,     59,     99,  20573,
             7188,     65,    368])




```python
violence_countries.describe(percentiles=[0.6,0.8,0.9,0.99])
```




    count        10.000000
    mean     170060.275247
    std      289804.009131
    min           1.000000
    50%       37651.341860
    60%       55961.450233
    80%      219735.874996
    90%      595101.690000
    99%      810242.469000
    max      834147.000000
    Name: _source.high_est, dtype: float64




```python
plt.
plt.show()
```


    ---------------------------------------------------------------------------

    TypeError                                 Traceback (most recent call last)

    <ipython-input-55-9851f9ca61a7> in <module>()
    ----> 1 plt.bar(height=violence_countries.values)
          2 plt.show()


    TypeError: bar() missing 1 required positional argument: 'left'


## Deaths due to disease


```python
ddd = fetch_data("health","deaths")
```


```python
print(ddd.shape)
print(ddd.columns)
```

    (1275, 7)
    Index(['_id', '_index', '_score', '_source.ccode', '_source.value',
           '_source.yr', '_type'],
          dtype='object')



```python
ddd[3:5]
```




<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>_id</th>
      <th>_index</th>
      <th>_score</th>
      <th>_source.ccode</th>
      <th>_source.value</th>
      <th>_source.yr</th>
      <th>_type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>3</th>
      <td>AVr7WUC9u8C0brA7O5Ez</td>
      <td>health</td>
      <td>1.0</td>
      <td>BEN</td>
      <td>1291.717403</td>
      <td>1991</td>
      <td>deaths</td>
    </tr>
    <tr>
      <th>4</th>
      <td>AVr7WUC9u8C0brA7O5E4</td>
      <td>health</td>
      <td>1.0</td>
      <td>GAB</td>
      <td>1219.265629</td>
      <td>1991</td>
      <td>deaths</td>
    </tr>
  </tbody>
</table>
</div>



### Finding variation in data


```python
ddd["_source.value"].describe(percentiles=[0.2,0.9])
```




    count    1275.000000
    mean     1114.740056
    std       451.388229
    min       332.977111
    20%       776.592083
    50%      1089.457795
    90%      1641.874760
    max      9514.815360
    Name: _source.value, dtype: float64



### Finding missing values


```python
print(ddd["_source.yr"].describe())
ddd[ddd["_source.yr"]>=1989].groupby(["_source.ccode"]).count()["_source.yr"].describe()
```

    count    1275.000000
    mean     2002.000000
    std         7.213932
    min      1990.000000
    25%      1996.000000
    50%      2002.000000
    75%      2008.000000
    max      2014.000000
    Name: _source.yr, dtype: float64





    count    51.0
    mean     25.0
    std       0.0
    min      25.0
    25%      25.0
    50%      25.0
    75%      25.0
    max      25.0
    Name: _source.yr, dtype: float64



## Primary education enrollment


```python
edu = fetch_data("cr","cr_country_year")
```


```python
print(edu.shape)
print(edu.columns)
```

    (1544, 8)
    Index(['_id', '_index', '_score', '_source.c_name', '_source.ccode',
           '_source.value', '_source.yr', '_type'],
          dtype='object')



```python
edu[3:5]
```




<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>_id</th>
      <th>_index</th>
      <th>_score</th>
      <th>_source.c_name</th>
      <th>_source.ccode</th>
      <th>_source.value</th>
      <th>_source.yr</th>
      <th>_type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>3</th>
      <td>AVr7WbZgu8C0brA7O5Yu</td>
      <td>cr</td>
      <td>1.0</td>
      <td>Angola</td>
      <td>AGO</td>
      <td>105.210403</td>
      <td>2007</td>
      <td>cr_country_year</td>
    </tr>
    <tr>
      <th>4</th>
      <td>AVr7WbZgu8C0brA7O5Yz</td>
      <td>cr</td>
      <td>1.0</td>
      <td>Burundi</td>
      <td>BDI</td>
      <td>28.396400</td>
      <td>1971</td>
      <td>cr_country_year</td>
    </tr>
  </tbody>
</table>
</div>



### Finding missing values


```python
print(edu["_source.yr"].describe())
edu[(edu["_source.yr"]>=1989) & (edu["_source.yr"]<=2014)].groupby(["_source.ccode"]).count()["_source.yr"].describe()
```

    count    1544.000000
    mean     1991.854275
    std        12.763114
    min      1970.000000
    25%      1981.000000
    50%      1991.000000
    75%      2003.000000
    max      2015.000000
    Name: _source.yr, dtype: float64





    count    43.000000
    mean     20.418605
    std       6.970115
    min       1.000000
    25%      17.000000
    50%      24.000000
    75%      25.000000
    max      26.000000
    Name: _source.yr, dtype: float64



### Finding variation in data


```python
edu["_source.value"].describe(percentiles=[0.2,0.9])
```




    count    1544.000000
    mean       80.242398
    std        30.187678
    min         7.863490
    20%        50.878506
    50%        83.734425
    90%       114.955193
    max       149.951737
    Name: _source.value, dtype: float64



## GINI coeffecient measuring inequality


```python
ineq = fetch_data("ineq","ineq_country_year")
```


```python
print(ineq.shape)
print(ineq.columns)
```

    (299, 8)
    Index(['_id', '_index', '_score', '_source.c_name', '_source.ccode',
           '_source.value', '_source.yr', '_type'],
          dtype='object')



```python
ineq[3:5]
```




<div>
<table border="1" class="dataframe">
  <thead>
    <tr style="text-align: right;">
      <th></th>
      <th>_id</th>
      <th>_index</th>
      <th>_score</th>
      <th>_source.c_name</th>
      <th>_source.ccode</th>
      <th>_source.value</th>
      <th>_source.yr</th>
      <th>_type</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <th>3</th>
      <td>AVr7WSjGu8C0brA7O4__</td>
      <td>ineq</td>
      <td>1.0</td>
      <td>Botswana</td>
      <td>BWA</td>
      <td>49.5</td>
      <td>2010</td>
      <td>ineq_country_year</td>
    </tr>
    <tr>
      <th>4</th>
      <td>AVr7WSjGu8C0brA7O5AB</td>
      <td>ineq</td>
      <td>1.0</td>
      <td>Burkina Faso</td>
      <td>BFA</td>
      <td>39.0</td>
      <td>1995</td>
      <td>ineq_country_year</td>
    </tr>
  </tbody>
</table>
</div>



### Finding variation in data


```python
ineq["_source.value"].describe(percentiles=[0.2,0.9])
```




    count    299.000000
    mean      47.356522
    std       10.041831
    min       28.900000
    20%       39.000000
    50%       45.700000
    90%       60.960000
    max       77.100000
    Name: _source.value, dtype: float64



### Finding missing values


```python
print(ineq["_source.yr"].describe())
ineq[(ineq["_source.yr"]>=1989) & (ineq["_source.yr"]<=2014)].groupby(["_source.ccode"]).count()["_source.yr"].describe()
```

    count     299.000000
    mean     1988.755853
    std        17.228544
    min      1914.000000
    25%      1977.000000
    50%      1994.000000
    75%      2002.000000
    max      2011.000000
    Name: _source.yr, dtype: float64





    count    49.000000
    mean      3.795918
    std       2.245176
    min       1.000000
    25%       2.000000
    50%       4.000000
    75%       5.000000
    max       9.000000
    Name: _source.yr, dtype: float64




```python

```
